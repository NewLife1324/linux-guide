pages:
  - name: Статьи в разработке
    anchor: page983522
    date: 02.01
    content: |
      Тут будут перечислены статьи, которых не хватает в гайде
  - name: Установка Manjaro
    anchor: page98352
    date: 27.12
    content: |
      <p>Для того, что бы как то ознакомиться с Линукс, нам надо его установить.
        Гайд будет основан на установке Manjaro
      </p>
      <p>Manjaro 20 - новый релиз
        дистрибутива Manjaro Linux, основанного на ArchLinux и предназначенного
        для установки на рабочие станции и обычные домашние компьютеры.
      </p>
      <p>Для
        того, чтобы установить Manjaro 20, достаточно выполнить следующие
        действия:
      </p>
      <ul>
        <li>Скачайте образ диска Manjaro 20 с официальной страницы дистрибутива: <a href="https://manjaro.org/download/">Скачать</a></li>
        <li>Запишите образ на флешку или любой другой удобный для вас носитель</li>
        <ul>
          <li>Записать образ дистрибутива Manjaro Linux на флешку можно с помощью нескольких специальных программ. Это Rufus, Win32 Disk Imager и Universal USB Installer. Рассматриваю весь процесс на примере первого приложения, так как оно самое простое, легкое (1 МБ), а еще имеет как установочную, так и переносную версию, <a href="https://rufus.ie/ru/">Скачать можно тут</a>.</li>
          <li>{rufus_ui}</li>
          <li>Запускаем ее и начинаем настройку. Я выбираю сначала переносное USB устройство, метод загрузки (ISO), затем кликаю по кнопке «ВЫБРАТЬ», чтобы указать путь к образу.</li>
          <li>Схему раздела и целевую систему оставляю без изменений, указываю метку тома, файловую систему и запускаю запись образа на флешку нажатием на кнопку «СТАРТ».</li>
        </ul>
        <li>Выставьте в BIOS первичную загрузку с DVD или Flash и загрузитесь с созданного носителя.</li>
        <ul>
          <li>Так как я записала образ на флешку, необходимо поменять настройки в BIOS или UEFI так, чтобы она стояла в приоритете при первичной загрузке. Перезагружаю компьютер и перехожу к графическому меню нажатием на одну из горячих клавиш (F8, F2, Del) или же комбинацию (Shift + F2). А вот какую – зависит от материнской платы. Если же перед этим у меня был установлен Windows 10, я могу перейти в режим безопасной загрузки через «Параметры».</li>
          <li>Как только меню BIOS/UEFI откроется, я перехожу во вкладку «Boot» и открываю настройку «Boot Device Priority». На первой позиции должен быть USB разъем.</li>
        </ul>
        <li>Гайд по установке можно посмотерть <a href="https://www.youtube.com/watch?v=YPWtBIfnt68">тут</a> или ниже</li>
        <div class="embed-responsive embed-responsive-16by9">
          <iframe class="embed-responsive-item" src="https://www.youtube.com/embed/YPWtBIfnt68" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
        </div>
      </ul>
  - name: Общее представление об linux
    anchor: page01345
    date: 26.12
    content: |
      {Linux} 
      <p>Стоит сразу отметить, что вашим другом станет Терминал.
        Терминал — это программа, которая используется для взаимодействия с
        шеллом. Это просто интерфейс к нему и другим программам командной строки,
        которые работают внутри нее.
      </p>
      <p>Команда в bash — это наименьшая
        единица кода, которую bash может выполнить. С помощью команд мы сообщаем
        шеллу, что нам нужно, чтобы он сделал. bash обычно принимает от
        пользователя одну команду и возвращается к нему после того, как команда
        будет выполнена. Чтобы немного освоиться в bash, давайте попробуем
        выполнить несколько простых команд.
      </p>
      <p>Здесь будет раскрыто базовое
        представление о [Linux]. Стоит уточнить парочку следующих моментов:
      </p>
      <ul>
        <li>Установка программ и пакетов производится в большинстве случаев через терминал, с помощью пакетного менеджера. При этом стоит учитывать, что ОС на базе линукса очень много и в разных системах применяются разные менеджеры, которые отвечают за установку. Тут я постараюсь дать максимально общие представления</li>
        <li>Через терминал можно полностью настраивать систему, редактировать текстовые файлы, просматривать их, перемещать, удалять, переименовывать и копировать. При достаточных знаних использование терминала может быть эффективней, чем проводника</li>
        <li></li>
        <li>%Ctrl+Alt+T для открытия терминала. В нем можно проводить большинство операций</li>
      </ul>
  - name: Топ дистрибутивов 2021
    anchor: page15541
    date: 27.12
    content: |
      <a href="https://losst.ru/top-distributivov-linux-2021">Источник</a>
      <p>Выбор дистрибутива Linux для использования на своём компьютере или
        ноутбуке довольно не простая задача. Особенно для новичков. Одним из
        критериев выбора может стать популярность дистрибутива. Поскольку, чем
        больше людей его используют, тем, скорее всего, он лучше и тем больше
        информации по нему будет в интернете. Но, поскольку, Linux дистрибутивы не
        собирают телеметрии, определить популярные дистрибутивы довольно
        сложно.
      </p>
      <p>С года в год мы делаем рейтинг дистрибутивов по их
        популярности в поисковой системе Яндекс. Пришло время поговорить про
        лучшие дистрибутивы Linux 2021 года. Конечно, этот способ оценки не даёт
        сто процентной точности, однако позволяет понять общую картину.
      </p>
      <h3></h3>
      <h3>1. UBUNTU</h3>
      <p>Неизменным лидером за последние несколько
        лет остается дистрибутив Ubuntu, разработанный компанией Canonical. Этот
        дистрибутив основан на Debian и существует с 2004 года. У Ubuntu есть
        версия для настольных компьютеров, а также для серверов. Компания
        Canonical и сообщество выпускают редакции дистрибутива почти со всеми
        популярными окружениями рабочего стола. За время развития дистрибутива в
        сети накопилось множество обучающих материалов, инструкций и решений для
        возможных проблем. Это лучший дистрибутив для домашнего использования и
        рабочих станций.
      </p>
      <p>Дистрибутив достаточно стабилен, потому что имеет
        фиксированный график релизов. Версия с длительным сроком поддержки выходит
        раз в два года в апреле, а обычные версии со сроком поддержки в 9 месяцев
        выходят раз в пол года. Если вы предпочитаете стабильность, то можете
        использовать только LTS версии. Если же вам нужно более новое программное
        обеспечение - можно обновляться до каждой обычной версии. С появлением
        универсального менеджера пакетов snap проблема с устареванием была
        частично решена. Теперь можно и в стабильной системе получить новые версии
        браузеров, мессенджеров и других программ. Дальше давайте рассмотрим
        другие популярные Linux дистрибутивы 2021.
      </p>
      {desktop_ubuntu} 
      <h3>2.
        DEBIAN
      </h3>
      <p>Второе место, как и раньше занимает дистрибутив Debian. В
        отличие от Ubuntu этот дистрибутив развивается только сообществом и
        существует с 1995 года. Именно на нём основывается Ubuntu. Debian ещё
        более стабилен чем Ubuntu, потому что новые версии выходят примерно раз в
        два года, а поддержка старых версий длиться на протяжении примерно пяти
        лет. Этот дистрибутив больше подходит для серверов. Там, чаще всего, нужна
        стабильность, а не новизна программного обеспечения, однако на домашних
        компьютерах его тоже можно использовать.
      </p>
      <p>Поскольку система Ubuntu
        основана на Debian, то всё программы работающие в ней, скорее всего, будут
        работать и в Debian. Но получить их будет немного сложнее. Мне Debian
        показался более сложным в настройке по сравнению с Ubuntu. И конечно,
        более старое, но стабильное программное обеспечение не преимущество при
        использовании на рабочей станции. Лучший дистрибутив, но для сервера.
      </p>
      {desktop_debian} 
      <h3>3. CENTOS</h3>
      <p>Дистрибутив CentOS всё ещё остаётся
        на третьем месте по популярности. Если Debian время от времени
        используется в качестве рабочей системы, то CentOS, как и Red Hat, на
        исходном коде которого он, до недавнего времени, был основан,
        предназначены для серверов. Сейчас на CentOS много чего работает. Но в
        2021 году в компании Red Hat решили превратить CentOS в полигон для новых
        возможностей, которые потом появятся в коммерческом дистрибутиве Red
        Hat.
      </p>
      <p>Поддержка CentOS 8 прекратится 31 декабря 2021 года, CentOS 7
        - в 2024 году. После этого будет существовать только CentOS Stream,
        которая использует систему rolling релизов. Таким образом, изменения
        сначала попадают в CentOS Stream, тестируются, и только затем на основе
        этого дистрибутива строится Red Hat Enterprice Linux. Тогда как раньше всё
        было наоборот. В таких условиях нельзя рекомендовать использовать CentOS
        для новых серверов, однако на всё ещё остаётся популярной.
      </p>
      <p>Довольно
        быстро были созданы две альтернативы. Это Rocky Linux и Alma Linux. Первый
        дистрибутив развивается сообществом, второй - компанией CloudLinux. На
        данный момент Rocky Linux согласно Яндексу более популярен, однако оба
        дистрибутива ещё мало используются.
      </p>
      {desktop_centos} 
      <h3>4. ASTRA
        LINUX
      </h3>
      <p>Российский дистрибутив Astra Linux сместил Linux Mint и
        теперь занимает это место. Случилось это, скорее всего, благодаря
        законодательной инициативе в РФ по использованию российского ПО в
        государственных учреждениях и школах. Из-за этого её начали устанавливать
        во многих организациях, и теперь много людей ищет как ею пользоваться. У
        дистрибутива есть две версии Astra Linux Common Edition, которую можно
        свободно скачать и использовать всем, а также Astra Linux Special Edition,
        которая предназначена для военных целей.
      </p>
      <p>Основная особенность
        системы Special Edition в том, что все репозитории к ней идут на дисках, а
        сетевые репозитории по умолчанию не добавлены. Но этого требует специфика
        её использования. Общая же система многим напоминает Debian, потому что
        она была на нём основана. В системе используется собственное окружение
        рабочего стола под названием Fly, основанное на KDE. Его интерфейс
        довольно похож на Windows и многим начинающим может этим понравится.
        Большинство действий по работе с системой можно выполнить в графическом
        интерфейсе. Новые релизы выходят не регулярно, но относительно часто,
        примерно раз в год.
      </p>
      {desktop_astra} 
      <h3>5. LINUX MINT</h3>
      <p>Дистрибутив Linux Mint существует с 2006 года и основывается на LTS
        выпусках Ubuntu. Раньше он занимал четвертое место в этом рейтинге.
        Дистрибутив имеет фиксированный график релизов. Каждый следующий релиз
        выходит спустя какое-то время после выпуска LTS версии Ubuntu. Он больше
        ориентирован на новичков в мире Linux и делает настройку системы
        проще.
      </p>
      <p>После выпуска Gnome 3 с новым дизайном интерфейса в Linux
        Mint начали разрабатывать собственное окружение рабочего стола, сохраняя
        при этом традиционный внешний вид рабочего стола, напоминающий чем-то
        Windows. Кроме Cinnamon официально поддерживаются окружения MATE и XFCE.
        Кроме того, вместе с системой поставляется несколько утилит для её
        настройки. Например, для обновления, массового переименования файлов,
        управления пакетами, записи образов на флешку и так далее.
      </p>
      {desktop_mint} 
      <h3>6. KALI LINUX</h3>
      <p>Kali Linux - самый популярный
        дистрибутив для тестирования безопасности. Он основан на Debian и в
        качестве окружения рабочего стола по умолчанию использует Xfce. Новые
        релизы выходят не регулярно, но несколько раз в год. После выхода каждого
        следующего релиза предыдущий перестаёт поддерживаться. Основная
        особенность и преимущество этого дистрибутива то, что в нём
        предустановлено огромное количество инструментов для тестирования
        безопасности. Если эти инструменты вам не нужны, это всё тот же Debian и
        использовать его на домашнем компьютере нет смысла. Однако если нужны - вы
        можете сэкономить много времени на их установке и настройке выбрав Kali
        Linux.
      </p>
      {desktop_kali} 
      <h3>7. FEDORA</h3>
      <p>Из-за появления в топе
        Astra Linux дистрибутив Fedora сместился с шестого на седьмое место. Этот
        дистрибутив разрабатывается компанией Red Hat в первую очередь как система
        для рабочих станций. Все новые возможности, которые в будущем войдут в Red
        Hat Enterprice Linux сначала появляются в Fedora. Например, пакетный
        менеджер dnf сначала появился в Fedora, а только потом в RHEL и
        CentOS.
      </p>
      <p>В последние годы свежие версии Fedora выходят раз в пол
        года, весной и осенью. Поддержка каждой версии Fedora длится примерно 13
        месяцев. Для каждой версии поддержка заканчивается с выходом версии:
        номер_версии+2. Никаких LTS версий, которые можно было бы использовать в
        течении нескольких лет тут нет. В качестве системы управления пакетами
        используется RPM, как и во всех дистрибутивах Red Hat. Также в качестве
        альтернативы Snap в Fedora есть универсальный пакетный менеджер Flatpak. В
        качестве окружения рабочего стола используется Gnome. Кроме того, Fedora
        постоянно пытается внедрять новые технологии полезные для разработчиков,
        например, существуют редакции дистрибутива Fedora CoreOS, которую можно
        использовать в контейнерах и Fedora Silverblue, особенная тем, что состоит
        из неизменяемых компонентов.
      </p>
      {desktop_fedora} 
      <h3>8. MANJARO</h3>
      <p>Это один из самых популярных дистрибутивов, основанных на Arch Linux.
        Он делает эту систему более стабильной, предоставляя отдельные репозитории
        пакетов, в которых они уже более протестированы, стабильны и, скорее
        всего, не вызовут проблем при обновлении системы. В дистрибутиве, как и в
        Arch Linux используется система Rolling релизов. Это значит, что вы всегда
        будете иметь самую свежую версию дистрибутива на своём компьютере.
      </p>
      <p>Также разработчики часто выпускают релизы Manjaro, у которых есть номер
        версии, например 20 или 21. Это не что иное, как снапшоты текущего
        состояния репозиториев системы. Официально дистрибутив поддерживает
        окружения рабочего стола Gnome, KDE и Xfce. Ещё несколько окружений
        поддерживается сообществом. В целом, это неплохой дистрибутив для
        домашнего компьютера.
      </p>
      {desktop_manjaro} 
      <h3>9. OPENSUSE</h3>
      <p>Это
        довольно популярный дистрибутив от копании SUSE. Он основан на наработках
        SUSE Linux Enterprice и использует систему управления пакетами RPM. У
        дистрибутива есть две редакции. Редакция с обычными релизами под названием
        Leap и редакция с Rolling релизами под названием Tumbleweed. Поэтому тут
        вы сможете уже выбрать что вам больше по душе - более стабильная система
        или самое новое программное обеспечение. Новые версии редакции Leap
        выходят примерно раз в год.
      </p>
      <p>Раньше в дистрибутиве по умолчанию
        использовалось окружение рабочего стола KDE, сейчас во время установки
        можно выбрать ещё Gnome и XFCE. Для конфигурации системы используется
        утилита YaST. Если программного обеспечения, которое есть в официальных
        репозиториях вам будет мало, то существует Build Service, с помощью
        которого можно собрать много программ. Это тоже неплохой дистрибутив для
        домашнего использования.
      </p>
      {desktop_opensuse} 
      <h3>10. ARCH LINUX</h3>
      <p>Arch Linux - очень гибкий и настраиваемый дистрибутив, разрабатываемый
        сообществом. Он использует систему rolling релизов для того чтобы у
        пользователей было всегда самое свежее программное обеспечение, а также
        собственный формат пакетов и пакетный менеджер pacman. Особенность этой
        системы в том, что вы можете полностью её настроить. Вся установка
        выполняется с помощью командной строки.
      </p>
      <p>Вы можете выбрать драйвера,
        дисплейный сервер, графическое окружение, набор программ. Всё это вам
        придётся устанавливать вручную. Эта система больше всего подходит тем, кто
        хочет разобраться как работает Linux изнутри и у кого есть время на
        это.
      </p>
      {desktop_arch} 
      <h3>ВЫВОДЫ</h3>
      <p>В этой статье мы рассмотрели
        лучшие дистрибутивы 2021 года, основываясь на популярности их в Яндекс.
        Согласно Distrowatch, на первом месте по популярности находится MX Linux,
        на втором EndeavourOS, и где то рядом, на пятом месте Pop OS. Дистрибутив
        Ubuntu они разместили на шестом месте. Возможно за границей ситуация с
        использованием дистрибутивов Linux меняется довольно быстро, но у нас всё
        осталось почти по старому. А каким дистрибутивом пользуетесь вы? Какой
        считаете лучшим? Напишите в комментариях!
      </p>
  - name: Общее представление об Bash
    anchor: page13223
    date: 27.12
    content: |
      <a href="https://losst.ru/osnovnye-komandy-bash">Источник</a> 
      <p> Безусловно,
        все те кто общается с ОС Linux хоть раз да имели дело(во
        всяком случае слышали точно) с командной оболочкой BASH. Но BASH не только
        командная оболочка, это еще и превосходный скриптовый язык
        программирования. Цель этой статьи — познакомить поближе юзеров с bash,
        рассказать про синтаксис, основные приемы и фишки языка, для того чтобы
        даже обычный пользователь смог быстренько написать простой скрипт для
        выполнения ежедневной(-недельной, -месячной) рутинной работы. BASH —
        Bourne-Again SHell (что может переводится как «перерожденный шел», или
        «Снова шел Борна(создатель sh)»), самый популярный командный интерпретатор
        в юниксоподобных системах, в особенности в GNU/Linux. Ниже приведу ряд
        встроенных команд, которые мы будем использовать для создания своих
        скриптов 
      </p>
      <h3>Основные команды</h3>
      <p>Основная задача оболочки - выполнять
        команды, но кроме утилит, расположенных в файловой системе, Bash имеет свой
        набор команд, многими из которых вы пользуетесь каждый день сами этого не
        понимая. Эти команды Bash находятся не на диске, а встроены в саму оболочку. В
        этой статье мы рассмотрим основные команды bash в linux, которые могут быть
        полезны в некоторых ситуациях.
      </p>
      <h3>1. SOURCE</h3>
      <p>Эта команда позволяет
        прочитать и выполнить все команды из указанного файла в текущей командной
        оболочке. Это значит, что все заданные в нем переменные окружения будут видны
        во всех скриптах или командах, которые вы будете выполнять. Напомню, что если
        вы запускаете обычный скрипт и объявляете в нем переменную, то она будет
        доступна только ему потому что для скриптов создается отдельный экземпляр
        оболочки. Он наследует переменные родителя, но не наоборот. Эта команда часто
        применяется для обновления окружения после chroot:
      </p>
      <pre><code
        class="language-bash">$ source /etc/profile</code></pre>
      <h3>2. ALIAS</h3>
      <p>Команда alias позволяет создавать псевдонимы для других команд. Например,
        вы можете настроить так, чтобы когда вы вводите update, выполнялась команда
        sudo apt update && sudo apt upgrade. Если вызвать команду без параметров, то
        она выведет список уже заданных псевдонимов. Смотрите подробнее о том как
        создавать алиасы Linux в отдельной статье.
      </p>
      <pre><code
        class="language-bash">$ alias </code></pre>
      <h3>3. BIND</h3>
      <p>С помощью этой
        команды вы можете связать нажатие клавиши с определенной командной или
        функцией. Например, настроим, чтобы при нажатии F12 в окне терминала
        выполнялась команда pwd:
      </p>
      <pre><code class="language-bash">$ bind
        '"\\e[24~":"pwd\n"' </code></pre>
      <h3>4. CD</h3>
      <p>Команда cd используется
        очень часто при работе с папками в терминале. Она позволяет сменить текущую
        папку на произвольную. Можно использовать чтобы не набирать длинные пути,
        также она необходима при компиляции. По умолчанию, текущая папка -
        домашняя:
      </p>
      <pre><code class="language-bash">$ cd / </code></pre>
      <h3>5.
        DECLARE
      </h3>
      <p>Встроенная команда bash - declare позволяет объявлять
        переменные. Опция -a позволяет вывести все уже существующие переменные
        окружения. В отличии от обычного объявления вы можете задать различные
        параметры, например, сделать переменную только для чтения с помощью опции -r.
        Также можно объявлять функции.
      </p>
      <pre><code class="language-bash">$ declare
        VAR=test </code></pre>
      <h3>6. DIRS</h3>
      <p>Команда dirs отображает историю
        смены текущей папки. Каждая предыдущая папка отображается с новой строки. С
        помощью опции -n можно указать, сколько последних элементов выводить.
      </p>
      <pre><code class="language-bash">$ dirs </code></pre>
      <h3>7. ECHO</h3>
      <p>Это
        одна из самых простых, но в то же время очень полезных команд. Она выводит
        указанную строку на экран. Часто используется в различных скриптах или для
        отправки значений в конфигурационные файлы. Подробнее про команду echo
        смотрите в отдельной статье.
      </p>
      <pre><code class="language-bash">$ echo "Это
        строка" </code></pre>
      <h3>8. ENABLE</h3>
      <p>Команда enable позволяет включать
        или отключать встроенные команды bash. Для включения встроенной команды
        достаточно передать ее в параметрах. Если вы хотите отключить команду,
        используйте опцию -n, после этого вместо встроенной команды, будет выполняться
        утилита из файловой системы.
      </p>
      <pre><code class="language-bash">$ enable -n
        echo </code></pre>
      <h3>9. EXIT</h3>
      <p>Универсальная команда, которая
        позволяет закрыть сеанс оболочки, выйти из терминала или завершить текущую
        сессию.
      </p>
      <h3>10. EXPORT</h3>
      <p>Еще одна команда для объявления переменных.
        Все объявленные с помощью нее переменные экспортируются во внешнее окружение
        среды и будут доступны всем скриптам и программам. С помощью опции -p вы
        можете посмотреть экспортированные на данный момент переменные.
      </p>
      <pre><code
        class="language-bash">$ export VAR=test </code></pre>
      <h3>11. BG</h3>
      <p>Команда bg позволяет посмотреть команды, которые выполняются в фоне. Если
        вы нажмете сочетание клавиш Ctrl+Z, то утилита будет свернута в фоновый режим.
        Этой командой вы можете посмотреть все такие процессы для данной оболочки.
      </p>
      <pre><code class="language-bash">$ bg </code></pre>
      <h3>12. FG</h3>
      <p>Эта
        команда позволяет восстановить команду из фона, в параметрах ей нужно передать
        только идентификатор нужного процесса, который вы можете узнать с помощью
        bg.
      </p>
      <pre><code class="language-bash">$ fg 1 </code></pre>
      <h3>13.
        HISTORY
      </h3>
      <p>Команда history linux позволяет посмотреть историю команд,
        которые вы выполняли ранее. Здесь сохраняется более 1000 последних команд, вы
        можете все их увидеть, выполнять по них поиск и так далее. Вы можете задать
        нужное количество записей просто передав нужное значение.
      </p>
      <pre><code
        class="language-bash">$ history 10 </code></pre>
      <h3>14. KILL</h3>
      <p>Команда
        kill может быть системной утилитой или командой оболочки. Она позволяет
        отправить указанному процессу сигнал. Например, SIGKILL, SIGTERM и другие. С
        помощью нее вы можете завершить процесс по его PID или идентификатору
        Bash.
      </p>
      <h3>15. LET</h3>
      <p>Команда let выполняет функцию калькулятора, ей
        нужно передать математическое выражение, которое она подсчитает. Можно
        передать несколько таких выражений.
      </p>
      <pre><code class="language-bash">$ let
        "2+2" </code></pre>
      <h3>16. POPD</h3>
      <p>Это еще одна команда, которая
        используется для навигации по каталогах. Команда удаляет последнюю директорию
        из стека каталогов. Таким образом, вы перемещаетесь в ранее выбранную текущую
        папку с помощью cd, на уровень выше. Команде можно передать в параметрах
        сколько папок нужно удалить. Для этого добавьте плюс, а затем цифру.
      </p>
      <h3>17. PRINTF</h3>
      <p>Эта команда похожа на echo по своему назначению  похожа
        на echo. Она позволяет вывести в терминал строку, но перед выводом вы можете
        настроить ее форматирование. Синтаксис форматирования очень похож на тот, что
        используется в популярных языках программирования, таких как Си или PHP.
        Например, с помощью этой команды bash вы можете подставить значения переменных
        в произвольные места строки:
      </p>
      <pre><code class="language-bash">$ printf
        "Var: %s\n" "$VAR" </code></pre>
      <h3>18. PUSHD</h3>
      <p>Команда pushd выполняет
        действие, обратное до popd и по назначению аналогична cd. Она устанавливает
        указанную папку на верхушку стека директорий, тем самым меняет текущую рабочую
        директорию на указанную вами.
      </p>
      <h3>19. PWD</h3>
      <p>Позволяет отобразить
        текущую рабочую папку:
      </p>
      <pre><code class="language-bash">$ pwd
        </code></pre>
      <h3>20. READ</h3>
      <p>С помощью команды read, вы можете прочитать
        строку из стандартного ввода или файла в переменную. Есть подобные ей команды
        оболочки bash, которые позволяют считывать строку в массив. Команде можно
        передать файл для считывания, а также несколько переменных:
      </p>
      <pre><code
        class="language-bash">$ read VAR </code></pre>
      <h3>21. SUSPEND</h3>
      <p>Позволяет приостановить выполнение оболочки пока не будет отправлен сигнал
        SIGCONT. Можно также приостановить выполнение одного из процессов,
        выполняющихся в фоне.
      </p>
      <h3>22. UMASK</h3>
      <p>Во время создания файлов, им
        присваиваются определенные права доступа. Право на чтение, запись и выполнение
        для владельца, группы и остальных пользователей. С помощью этой команды вы
        можете изменить правила, по которым присваиваются эти права.
      </p>
      <h3>23.
        TIME
      </h3>
      <p>Встроенная команда time позволяет замерять время выполнения
        любого скрипта или программы. Измеряется отдельно время выполнения программы и
        время на ввод пользователя.
      </p>
      <h3>24. WAIT</h3>
      <p>Наш список команд bash
        завершает wait. Она позволяет ожидать пока указанный процесс завершит свое
        выполнение. Вы можете использовать PID или идентификатор Bash для выбора
        нужного процесса.
      </p>
shortcuts:
  - placeholder: '%Ctrl+Alt+T'
    name: <kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>T</kbd>
    tip: Открывает терминал
  - placeholder: '%Ctrl'
    name: <kbd>Ctrl</kbd>
    tip: null
  - placeholder: '%Alt'
    name: <kbd>Alt</kbd>
    tip: null
  - placeholder: '%Shift'
    name: <kbd>↑ Shift</kbd>
    tip: null
  - placeholder: '%Tab'
    name: <kbd>Tab ↹</kbd>
    tip: null
images:
  - placeholder: '{Linux}'
    file: images/linux.png
    capture: Пингвин
  - placeholder: '{rufus_ui}'
    file: images/rufus_ui.png
    capture: Интерфейс программы
  - placeholder: '{desktop_arch}'
    file: images/top/arch.png
    capture: Интерфейс Linux Arch
  - placeholder: '{desktop_astra}'
    file: images/top/astra.png
    capture: Интерфейс Linux Astra
  - placeholder: '{desktop_centos}'
    file: images/top/centos.png
    capture: Интерфейс Linux Centos
  - placeholder: '{desktop_debian}'
    file: images/top/debian.png
    capture: Интерфейс Linux Debian
  - placeholder: '{desktop_fedora}'
    file: images/top/fedora.png
    capture: Интерфейс Linux Fedora
  - placeholder: '{desktop_kali}'
    file: images/top/kali.png
    capture: Интерфейс Linux Kali
  - placeholder: '{desktop_manjaro}'
    file: images/top/manjaro.png
    capture: Интерфейс Linux Manjaro
  - placeholder: '{desktop_mint}'
    file: images/top/mint.png
    capture: Интерфейс Linux Mint
  - placeholder: '{desktop_opensuse}'
    file: images/top/opensuse.png
    capture: Интерфейс Linux Opensuse
  - placeholder: '{desktop_ubuntu}'
    file: images/top/ubuntu.png
    capture: Интерфейс Linux Ubuntu
dict:
  - placeholder: '[Linux]'
    name: Linux
    tip: семейство Unix-подобных операционных систем на базе ядра Linux
    content: |
      <p>Linux, Ли́нукс; в части случаев GNU/Linux — семейство Unix-подобных
        операционных систем на базе ядра Linux, включающих тот или иной набор
        утилит и программ проекта GNU, и, возможно, другие компоненты. Как и ядро
        Linux, системы на его основе, как правило, создаются и распространяются в
        соответствии с моделью разработки свободного и открытого программного
        обеспечения. Linux-системы распространяются в основном бесплатно в виде
        различных дистрибутивов — в форме, готовой для установки и удобной для
        сопровождения и обновлений, — и имеющих свой набор системных и прикладных
        компонентов, как свободных, так и проприетарных (собственнических)
      </p>
  - placeholder: '[Bash]'
    name: Bash
    tip: >-
      усовершенствованная и модернизированная вариация командной оболочки Bourne
      shell
    content: |
      <p>BASH — Bourne-Again SHell (что может переводится как «перерожденный
        шел», или «Снова шел Борна(создатель sh)»), самый популярный командный
        интерпретатор в юниксоподобных системах, в особенности в GNU/Linux. Ниже
        приведу ряд встроенных команд, которые мы будем использовать для создания
        своих скриптов.
      </p>
      <p>Подавляющее большинство важных скриптов командного
        процессора Bourne может выполняться без изменения в bash, за исключением
        тех, которые ссылаются на специальные переменные Bourne или используют
        встроенные команды Bourne. Синтаксис команд Bash включает идеи,
        заимствованные у Korn shell (ksh) и C shell (csh), такие как
        редактирование командной строки, история команд, стек каталогов,
        переменные $RANDOM и $PPID, синтаксис замены команды $(…). Когда Bash
        используется как интерактивный командный процессор, он поддерживает
        автозавершение имён программ, файлов, переменных и т. п. с помощью клавиши
        %Tab
      </p>
